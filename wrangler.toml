# ======================================================
# ☁️ 祥興茶行 Cloudflare Worker + Pages 設定檔
# ======================================================

name = "hsianghsing-api"
main = "worker.js"
compatibility_date = "2025-10-25"

# ======================================================
# 🌍 Pages 模式：靜態前端設定
# ------------------------------------------------------
# Pages 模式下，ASSETS 才會被自動注入
pages_build_output_dir = "./"   # ← 讓 ASSETS.fetch(req) 能運作

# ======================================================
# 🏭 環境變數設定
# ------------------------------------------------------
[vars]
NODE_API = "http://127.0.0.1:3000"
ALLOW_ORIGIN = "http://localhost:8788"

# ======================================================
# ⚙️ 正式路由
# ------------------------------------------------------
routes = [
  { pattern = "hsianghsing.org/api/*", zone_id = "f23528900e3fe147202e4ee63e884590" },
  { pattern = "www.hsianghsing.org/api/*", zone_id = "f23528900e3fe147202e4ee63e884590" }
]

# ======================================================
# 🧪 開發模式設定（wrangler pages dev 用）
# ------------------------------------------------------
[env.development]
# 指定開發環境變數（會覆蓋上面的 vars）
[env.development.vars]
NODE_API = "http://localhost:3000"
ALLOW_ORIGIN = "http://localhost:8788"

# ======================================================
# 🧾 部署注意事項
# ------------------------------------------------------
# ✅ 本地開發：
#    1. 啟動 Node.js 後端 → `node server.js`
#    2. 啟動 Worker 代理 → `wrangler pages dev .`
#
# ✅ 正式部署：
#    1. 將 Node.js API 部署至雲端（Render / Railway / Fly.io）
#    2. 將下方 NODE_API 改成正式後端網址
#    3. 執行 `wrangler deploy`
#
# ✅ 驗證：
#    打開瀏覽器執行：
#       fetch('/api/health').then(r => r.json()).then(console.log)
#    預期結果：
#       { "ok": true, "ts": "2025-10-27T..." }

# ======================================================
# 🪶 Cloudflare Pages 靜態頁面設定
# ------------------------------------------------------
[site]
bucket = "./"           # ← 你的 index.html 與 app.js 所在資料夾
